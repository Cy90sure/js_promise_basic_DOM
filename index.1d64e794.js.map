{"mappings":"ACEA,SAAS,EAAe,CAAI,EAC1B,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,CAAA,EAAQ,SAAS,CAAG,UACpB,EAAQ,WAAW,CAAG,EACtB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CAEA,SAAS,IACP,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,CAAA,EAAQ,SAAS,CAAG,wBACpB,EAAQ,WAAW,CAAG,wBACtB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,CAQA,AANiB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,WACxD,EAAQ,wBACV,EACF,GAES,IAAI,CAAC,GAAgB,KAAK,CAAC,GAQpC,AANiB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAES,IAAI,CAAC,GAAgB,KAAK,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction successHandler(text) {\n    var message = document.createElement(\"div\");\n    message.className = \"message\";\n    message.textContent = text;\n    document.body.append(message);\n}\nfunction errorHandler() {\n    var message = document.createElement(\"div\");\n    message.className = \"message error-message\";\n    message.textContent = \"Promise was rejected!\";\n    document.body.append(message);\n}\nvar promise1 = new Promise(function(resolve, reject) {\n    document.querySelector(\".logo\").addEventListener(\"click\", function() {\n        resolve(\"Promise was resolved!\");\n    });\n});\npromise1.then(successHandler).catch(errorHandler);\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Promise was rejected!\"));\n    }, 3000);\n});\npromise2.then(successHandler).catch(errorHandler);\n\n//# sourceMappingURL=index.1d64e794.js.map\n","'use strict';\n\nfunction successHandler(text) {\n  const message = document.createElement('div');\n\n  message.className = 'message';\n  message.textContent = text;\n  document.body.append(message);\n}\n\nfunction errorHandler() {\n  const message = document.createElement('div');\n\n  message.className = 'message error-message';\n  message.textContent = 'Promise was rejected!';\n  document.body.append(message);\n}\n\nconst promise1 = new Promise((resolve, reject) => {\n  document.querySelector('.logo').addEventListener('click', () => {\n    resolve('Promise was resolved!');\n  });\n});\n\npromise1.then(successHandler).catch(errorHandler);\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!'));\n  }, 3000);\n});\n\npromise2.then(successHandler).catch(errorHandler);\n"],"names":["successHandler","text","message","document","createElement","className","textContent","body","append","errorHandler","promise1","Promise","resolve","reject","querySelector","addEventListener","then","catch","promise2","setTimeout","Error"],"version":3,"file":"index.1d64e794.js.map"}